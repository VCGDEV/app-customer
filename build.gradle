plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
    set('springCloudVersion', "Greenwich.SR3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacoco {
	toolVersion = "0.8.4"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.85
			}
			excludes = [
					'com.example.customer.AppCustomerApplication',
			]
		}
		rule {
			element = 'CLASS'
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.85
			}
			excludes = [
					'com.example.customer.AppCustomerApplication',
			]

		}
	}
}

jacocoTestReport {
	group = "Reporting"
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/reports/jacoco")
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
			])
		})
	}
}
